var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
import * as React from 'react';
import { filterProps, hasChanged } from '../utils';
export var PoseParentContext = React.createContext({});
var PoseComponent = (function (_super) {
    __extends(PoseComponent, _super);
    function PoseComponent(props) {
        var _this = _super.call(this, props) || this;
        _this.childrenHandlers = {
            registerAsChild: function (props) { return _this.poser.addChild(props); },
            onUnmount: function (child) { return _this.poser.removeChild(child); }
        };
        _this.setLayout = function (layout) {
            var prevLayout = _this.layout;
            var _a = _this.props, factoryConfig = _a.factoryConfig, flipMove = _a.flipMove;
            _this.layout = layout;
            if (prevLayout && flipMove) {
                _this.ref.setNativeProps({
                    transform: factoryConfig
                        .getStylesFromPoser(_this.poser)
                        .transform.map(function (rule) {
                        if (rule.translateX)
                            return { translateX: prevLayout.x - layout.x };
                        if (rule.translateY)
                            return { translateY: prevLayout.y - layout.y };
                        return rule;
                    })
                });
                _this.poser.flip(prevLayout, layout);
            }
        };
        _this.setRef = function (ref) { return (_this.ref = ref); };
        var poseConfig = props.poseConfig, factoryConfig = props.factoryConfig, registerAsChild = props.registerAsChild, pose = props.pose, initialPose = props.initialPose;
        var transformConfig = factoryConfig.transformConfig, poseFactory = factoryConfig.poseFactory, getProps = factoryConfig.getProps, filterConfig = factoryConfig.filterConfig;
        var filteredProps = filterProps(props);
        var config = __assign({}, (typeof poseConfig === 'function' ? poseConfig(filteredProps) : poseConfig), { props: filteredProps });
        if (initialPose || pose)
            config.initialPose = initialPose || pose;
        if (transformConfig)
            transformConfig(config, props);
        _this.poser = registerAsChild
            ? registerAsChild(filterConfig(config))
            : poseFactory(filterConfig(config));
        if (getProps)
            _this.platformSpecificProps = getProps(_this.poser, config, props, _this.setLayout);
        return _this;
    }
    PoseComponent.prototype.componentDidUpdate = function (prevProps) {
        var _a = this.props, pose = _a.pose, poseKey = _a.poseKey;
        this.poser.setProps(filterProps(this.props));
        if (poseKey !== prevProps.poseKey || hasChanged(prevProps.pose, pose)) {
            this.setPose(pose);
        }
    };
    PoseComponent.prototype.componentDidMount = function () {
        var _a = this.props, initialPose = _a.initialPose, pose = _a.pose;
        if (initialPose && pose)
            this.setPose(pose);
    };
    PoseComponent.prototype.componentWillUnmount = function () {
        var onUnmount = this.props.onUnmount;
        if (onUnmount)
            onUnmount(this.poser);
        this.poser.destroy();
    };
    PoseComponent.prototype.setPose = function (pose) {
        var _this = this;
        var onPoseComplete = this.props.onPoseComplete;
        var poseList = Array.isArray(pose) ? pose : [pose];
        Promise.all(poseList.map(function (key) { return key && _this.poser.set(key); })).then(function () { return onPoseComplete && onPoseComplete(pose); });
    };
    PoseComponent.prototype.popFromLayout = function () {
        if (!this.props.popFromLayout || !this.layout)
            return;
        var _a = this.layout, x = _a.x, y = _a.y, width = _a.width, height = _a.height;
        return {
            position: 'absolute',
            top: y,
            left: x,
            width: width,
            height: height
        };
    };
    PoseComponent.prototype.render = function () {
        var _a = this.props, Component = _a.Component, children = _a.children, style = _a.style, factoryConfig = _a.factoryConfig, flipMove = _a.flipMove, props = __rest(_a, ["Component", "children", "style", "factoryConfig", "flipMove"]);
        var getStylesFromPoser = factoryConfig.getStylesFromPoser;
        return (<PoseParentContext.Provider value={this.childrenHandlers}>
        {Component ? (<Component {...filterProps(props)} style={[
            style,
            getStylesFromPoser(this.poser),
            this.popFromLayout()
        ]} ref={flipMove ? this.setRef : undefined} {...(this.platformSpecificProps ? this.platformSpecificProps : {})}>
            {children}
          </Component>) : typeof children === 'function' ? (children(this.poser.get())) : null}
      </PoseParentContext.Provider>);
    };
    return PoseComponent;
}(React.PureComponent));
export { PoseComponent };
//# sourceMappingURL=PoseComponent.js.map