import { Animated } from 'react-native';
export declare type EasingFunction = (v: number) => number;
export declare type EasingDefinition = string | [number, number, number, number] | EasingFunction;
export declare type TransitionConfigBase = {
    toValue: number;
    useNativeDriver: boolean;
    isInteraction?: boolean;
};
export declare type TweenConfig = TransitionConfigBase & {
    delay?: number;
    duration?: number;
    ease?: EasingDefinition;
    toValue: number;
    isInteraction: boolean;
    useNativeDriver: boolean;
};
export declare type SpringConfig = TransitionConfigBase & {
    stiffness?: number;
    damping?: number;
    mass?: number;
    velocity?: number;
    overshootClamping?: boolean;
    restSpeed?: number;
    restDelta?: number;
};
export declare type KeyframesConfig = TransitionConfigBase & {
    values: number[];
    duration?: number;
    easings?: EasingDefinition[] | EasingDefinition;
    times?: number[];
};
export declare type TransitionConfig = (TweenConfig | SpringConfig | KeyframesConfig) & {
    type?: 'tween' | 'spring' | 'keyframes';
    loop?: number;
};
declare const _default: (value: Animated.Value, { type, loop, ...props }: TransitionConfig) => Animated.CompositeAnimation;
export default _default;
